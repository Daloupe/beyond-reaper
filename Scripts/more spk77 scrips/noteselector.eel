// MIDI note selector (original "note selection logic" by Veto and gofer :))
//  9.3.2014 (spk77)
//  - added "pitch filter"
//  - added "unselect mode"
//  - no time selection -> range == item start to item end, thanks gofer

function highlight_mouse_hover()
(
  gfx_r += 0.1;
  gfx_g += 0.1;
  gfx_b += 0.1;
);

function highlight_mouse_on_press()
(
  gfx_r += 0.2;
  gfx_g += 0.2;
  gfx_b += 0.2;
);

 function draw_string_step(x, y, r, g, b, a) local (w, h)
( 
  gfx_r = r;
  gfx_g = g;
  gfx_b = b;
  gfx_a = a;
  
  step_s = sprintf(#, "%d", step);
  gfx_measurestr(step_s, w, h);
  // is mouse on string?
  mouse_x >= x && mouse_x <= x + gfx_w && mouse_y >= y && mouse_y <= y + h ? (
    highlight_mouse_hover();
    mouse_wheel != 0 ? (
      highlight_mouse_on_press();
      step += (mouse_wheel / abs(mouse_wheel));
      step < 1 ? step = 1;
      mouse_wheel = 0;
    );
    mouse_cap == 5 ? (
      step = 1;
    );
  );
  mode == "select" ? gfx_printf("Select every ") : gfx_printf("Unselect every ");
  gfx_printf("%d", step);
  gfx_printf(". note");
);

 function draw_string_offset(x, y, r, g, b, a) local (w, h)
( 
  gfx_r = r;
  gfx_g = g;
  gfx_b = b;
  gfx_a = a;
  
  offset_s = sprintf(#, "%d", offset);
  gfx_measurestr(offset_s, w, h);
  // is mouse on string?
  mouse_x >= x && mouse_x <= x + gfx_w && mouse_y >= y && mouse_y <= y + h ? (
    highlight_mouse_hover();
    mouse_wheel != 0 ? (
      highlight_mouse_on_press();
      offset += (mouse_wheel / abs(mouse_wheel));
      offset < 0 ? offset = 0;
      offset > step - 1 ? offset = step - 1;
      mouse_wheel = 0;
    );
    mouse_cap == 5 ? (
      offset = 0;
    );
  );
  gfx_printf("Offset: ");
  gfx_printf("%d", offset);
);

 function draw_string_pitch(x, y, r, g, b, a) local (w, h)
( 
  gfx_r = r;
  gfx_g = g;
  gfx_b = b;
  gfx_a = a;
  
  sel_pitch_s = sprintf(#, "%d", sel_pitch);
  gfx_measurestr(sel_pitch_s, w, h);
  // is mouse on string?
  mouse_x >= x && mouse_x <= x + gfx_w && mouse_y >= y && mouse_y <= y + h ? (
    highlight_mouse_hover();
    mouse_wheel != 0 ? (
      highlight_mouse_on_press();
      mouse_wheel / abs(mouse_wheel) < 0 ? (
        sel_pitch > 0 ? (
          MIDIEditor_OnCommand(MIDIEditor_GetActive(), 40050);
        );
      ) : sel_pitch < 127 ? (
        MIDIEditor_OnCommand(MIDIEditor_GetActive(), 40049);
      );
      sel_pitch = MIDIEditor_GetSetting_int(MIDIEditor_GetActive(), "active_note_row");
      mouse_wheel = 0;
    );
  );
  gfx_printf("Pitch: ");
  gfx_printf("%d", sel_pitch);
);

 function draw_string_mode(x, y, r, g, b, a) local (w, h)
( 
  gfx_r = r;
  gfx_g = g;
  gfx_b = b;
  gfx_a = a;
  
  mode_s = sprintf(#, "%d", offset);
  gfx_measurestr(offset_s, w, h);
  // is mouse on string?
  mouse_x >= x && mouse_x <= x + gfx_w && mouse_y >= y && mouse_y <= y + h ? (
    highlight_mouse_hover();
    mouse_cap == 1 && lmb_down == 0 ? (
      highlight_mouse_on_press();
      mode == "select" ? mode = "unselect" : mode = "select";
      need_update = 1;
    );
  );
  gfx_printf("Mode: ");
  gfx_printf("%s", mode);
);

function select_notes()
(
  index = 0;
  k = -offset;
  loop(note_count,
    MIDI_GetNote(take, index, isSelected, isMuted, startPpqPos, endPpqPos, channel, note_pitch, velocity) ? (
      k % step == 0 && (endPpqPos > time_sel_start && startPpqPos < time_sel_end) && note_pitch == sel_pitch ? (
        mode == "select" ? (
          MIDI_SetNote(take, index, 1, isMuted, startPpqPos, endPpqPos, channel, note_pitch, velocity);
        ) : mode == "unselect" ? (
          MIDI_SetNote(take, index, 0, isMuted, startPpqPos, endPpqPos, channel, note_pitch, velocity);
        );
      ) : mode == "select" ? (
          MIDI_SetNote(take, index, 0, isMuted, startPpqPos, endPpqPos, channel, note_pitch, velocity);
      ) : mode == "unselect" && note_pitch == sel_pitch && (endPpqPos > time_sel_start && startPpqPos < time_sel_end) ? (
          MIDI_SetNote(take, index, 1, isMuted, startPpqPos, endPpqPos, channel, note_pitch, velocity);
      ) : (
          MIDI_SetNote(take, index, 0, isMuted, startPpqPos, endPpqPos, channel, note_pitch, velocity);
      );
      endPpqPos > time_sel_start && startPpqPos < time_sel_end && note_pitch == sel_pitch ? k += 1;
    );
    index += 1;
  );
  last_step = step;
  last_offset = offset;
  last_pitch = sel_pitch;
);
function run()
(
  gfx_x = gfx_y = 20;
  gfx_r = 0.5;
  gfx_g = 0.8;
  gfx_b = 0.5;
  gfx_a = 1; 
  draw_string_mode(gfx_x, gfx_y, 0.5, 0.8, 0.5, 1);
  gfx_x = 20;
  gfx_y += 2 * gfx_texth;
  
  draw_string_step(gfx_x, gfx_y, 0.5, 0.8, 0.5, 1);
  gfx_x = 20;
  gfx_y += 2 * gfx_texth;
  gfx_g = 0.8;
  gfx_b = 0.5;
  gfx_a = 1;
 
  draw_string_offset(gfx_x, gfx_y, 0.5, 0.8, 0.5, 1);
  gfx_x = 20;
  gfx_y += 2 * gfx_texth;
  
  draw_string_pitch(gfx_x, gfx_y, 0.5, 0.8, 0.5, 1);
  
  GetSet_LoopTimeRange(0, 0, time_sel_start, time_sel_end, 0);
  (take = MIDIEditor_GetTake(MIDIEditor_GetActive())) ? (
    sel_pitch = MIDIEditor_GetSetting_int(MIDIEditor_GetActive(), "active_note_row");
    time_sel_start = MIDI_GetPPQPosFromProjTime(take, time_sel_start);
    time_sel_end = MIDI_GetPPQPosFromProjTime(take, time_sel_end);
    
    // no time selection -> range == item start to item end, thanks gofer :)
    time_sel_start == time_sel_end ? ( 
      item = GetMediaItemTake_Item(take);
      item_start = GetMediaItemInfo_Value(item, "D_POSITION");
      item_end = item_start + GetMediaItemInfo_Value(item, "D_LENGTH");
      time_sel_start = MIDI_GetPPQPosFromProjTime(take, item_start);
      time_sel_end = MIDI_GetPPQPosFromProjTime(take, item_end);
    );
    
    MIDI_CountEvts(take, note_count, cc_count, sysEx_count);

    (mouse_x >= 0 && mouse_x <= gfx_w && mouse_y >= 0 && mouse_y <= gfx_h) && (last_step != step || last_offset != offset || last_pitch != sel_pitch || need_update == 1) ? (
      select_notes();
    );
    last_step = step;
    last_offset = offset;
    last_pitch = sel_pitch;
  );
  need_update = 0;
  mouse_cap == 1 ? lmb_down = 1 : lmb_down = 0;
  
  gfx_update();
  gfx_getchar() >= 0 ? defer("run();");
);

gfx_init("MIDI note selector", 200, 150);
gfx_setfont(1, "Verdana", 16);

step = 1;
last_step = -1;
offset = 0;
last_offset = -1;
sel_pitch = 0;
last_pitch = -1;

mode = "select";

need_update = 0;

lmb_down = 0;

run();