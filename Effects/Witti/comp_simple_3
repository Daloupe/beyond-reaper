slider1:0<-30,0,0.1>Threshold (dB)
slider2:2<1,20,0.1>Ratio
slider3:3<1,50,1>Attack (ms)
slider4:100<1,500,1>Release (ms)
slider5:50<10,100,1>Env Decay (ms)
slider6:0<-24,24,0.1>Output (dB)

filename:0,comp_simple_3gfx/meterbg.png
filename:1,comp_simple_3gfx/needle.png

in_pin:L in
in_pin:R in
out_pin:L out
out_pin:R out

@init
output = 1;
transfer_A = 0;
transfer_B = 1;
gain = 1;
env=0;

log2dB = 20/log(10);
db2log = log(10)/ 20;
gr_meter=1;
gr_meter_decay = exp(0.001/(1*srate));

@slider
threshold=exp(slider1/log2dB);

transfer_A = (1/slider2)-1;
transfer_B = output * pow(threshold,-transfer_A);

attack = exp(-1/(slider3/1000*srate));
release = exp(-1/(slider4/1000*srate));
envelope_decay = exp(-1/(slider5/1000*srate));

vol=10^(slider6/20);

@sample
inL=spl0;
inR=spl1;

det = max(abs(inL),abs(inR));
det += 0.000000000001;
env = det >= env ? det : det+envelope_decay*(env-det);
transfer_gain = env > threshold ? pow(env,transfer_A)*transfer_B:output;
gain = transfer_gain < gain ? transfer_gain+attack *(gain-transfer_gain) : transfer_gain+release*(gain-transfer_gain);

spl0 = inL * gain*vol;
spl1 = inR * gain*vol;

gr = log(gain)*log2dB;
grv = exp(gr*db2log);
grv < gr_meter ? gr_meter=grv : ( gr_meter*=gr_meter_decay; gr_meter>1?gr_meter=1; );

@gfx 0 200
gr_meter *= exp(1/30); gr_meter>1?gr_meter=1;
gfx_clear = 1;
gfx_a=1;
gfx_x=80;
gfx_y=0;
gfx_blit(0,1,0);
gfx_blit(1,1,-gr_meter*$pi-$pi);
