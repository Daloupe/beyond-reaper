slider1:0<-30,0,0.1>Threshold (dB)
slider2:0<-12,0,0.1>Ceiling (dB)
slider3:300<20,1010,1>(read only in bpm mode) Release (ms)
slider4:50<10,1000,1>(read only in bpm mode) Env Decay (ms)
slider5:1<0,3,1{OFF,ON,Release only,Env Decay only}>BPM sync
slider6:5<0,21,1{1,1T,1/2,1/2T,1/4,1/4T,1/8,1/8T,1/16,1/16T,1/32,1/32T,1/64,1/64T,1/128,1/128T,1/256,1/256T,1/512,1/512T,1/1024,1/1024T}>Release Units
slider7:10<0,21,1{1,1T,1/2,1/2T,1/4,1/4T,1/8,1/8T,1/16,1/16T,1/32,1/32T,1/64,1/64T,1/128,1/128T,1/256,1/256T,1/512,1/512T,1/1024,1/1024T}>Env Decay Units

in_pin:L in
in_pin:R in
out_pin:L out
out_pin:R out

@init
output = 1;
transfer_A = 0;
transfer_B = 1;
gain = 1;
env=0;

log2dB = 8.6858896380650365530225783783321;
db2log = 0.11512925464970228420089957273422;
gr_meter=1;
gr_meter_decay = exp(1/(1*srate));

@block
slider5==0?(
attack = exp(-1/(0.004/1000*srate));
release = exp(-1/(slider3/1000*srate));
envelope_decay = exp(-1/(slider4/1000*srate));
);
slider5==1?(
attack = exp(-1/(0.004/1000*srate));
Rms=(60000 / tempo * multR);
slider3 = Rms;
sliderchange(slider3);
Ems=(60000 / tempo * multE);
slider4 = Ems;
sliderchange(slider4);
release = exp(-1/(Rms/1000*srate));
envelope_decay = exp(-1/(Ems/1000*srate));
);
slider5==2?(
attack = exp(-1/(0.004/1000*srate));
Rms=(60000 / tempo * multR);
slider3 = Rms;
sliderchange(slider3);
release = exp(-1/(Rms/1000*srate));
envelope_decay = exp(-1/(slider4/1000*srate));
);
slider5==3?(
attack = exp(-1/(0.004/1000*srate));
Ems=(60000 / tempo * multE);
slider4 = Ems;
sliderchange(slider4);
release = exp(-1/(slider3/1000*srate));
envelope_decay = exp(-1/(Ems/1000*srate));
);

@slider
multR = (slider6 & 1) ? 2 ^ -(slider6 >> 1 - 3) / 3 :  2 ^ -(slider6 >> 1 - 2);
multE = (slider7 & 1) ? 2 ^ -(slider7 >> 1 - 3) / 3 :  2 ^ -(slider7 >> 1 - 2);

threshold=10^(slider1/20);
ceiling = 10^(slider2/20);

transfer_A = -1;
transfer_B = output * pow(threshold,-transfer_A);

vol=ceiling/threshold;

@sample
inL=spl0;
inR=spl1;

det = max(abs(inL),abs(inR));
det += 0.000000000001;
env = det >= env ? det : det+envelope_decay*(env-det);
transfer_gain = env > threshold ? pow(env,transfer_A)*transfer_B:output;
gain = transfer_gain < gain ? transfer_gain+attack *(gain-transfer_gain) : transfer_gain+release*(gain-transfer_gain);

spl0 = inL * gain*vol;
spl1 = inR * gain*vol;

gr = log(gain)*log2dB;
grv = exp(gr * db2log);
grv < gr_meter ? gr_meter=grv : ( gr_meter*=gr_meter_decay; gr_meter>1?gr_meter=1; );

@gfx 0 36
gr_meter *= exp(1/30); gr_meter>1?gr_meter=1;
gfx_r=1; gfx_g=gfx_b=0; gfx_a=0.8;

meter_bot=20;
meter_h=min(gfx_h,32);
xscale=gfx_w*20/meter_bot;

gfx_y=0;
gfx_x=gfx_w + log10(gr_meter)*xscale;
gfx_rectto(gfx_w,meter_h);

gfx_r=gfx_g=gfx_b=1.0; gfx_a=0.6;

s2=sqrt(2)/2;
g = s2;
while(
gfx_x=gfx_w + log10(g)*xscale;
gfx_x >= 0 ? 
(
gfx_y=0;
gfx_lineto(gfx_x,meter_h,0);
gfx_y=meter_h-gfx_texth;
gfx_x+=2;
gfx_drawnumber(log10(g)*20,0);
gfx_drawchar($'d');
gfx_drawchar($'B');
);
g*=s2;
gfx_x >=0;
);
