slider1:0<-30,0,0.1>Threshold (dB)
slider2:2<1,20,0.1>Ratio
slider3:3<1,50,1>(read only in bpm mode) Attack (ms)
slider4:100<1,500,1>(read only in bpm mode) Release (ms)
slider5:50<10,100,1>Env Decay (ms)
slider6:0<-24,24,0.1>Output (dB)
slider8:1<0,3,1{OFF,ON,Attack only,Release only}>BPM sync
slider9:16<0,21,1{1,1T,1/2,1/2T,1/4,1/4T,1/8,1/8T,1/16,1/16T,1/32,1/32T,1/64,1/64T,1/128,1/128T,1/256,1/256T,1/512,1/512T,1/1024,1/1024T}>Attack Units
slider10:8<0,21,1{1,1T,1/2,1/2T,1/4,1/4T,1/8,1/8T,1/16,1/16T,1/32,1/32T,1/64,1/64T,1/128,1/128T,1/256,1/256T,1/512,1/512T,1/1024,1/1024T}>Release Units
slider12:0<0,1,1{OFF,ON}>Delta
slider13:0<0,1,1{OFF,ON}>Auto Make-up
slider14:0<0,2,1{Feed Forward,Sidechain,Feedback}>Feed
slider15:0<-24,24,0.1>Input (dB)
slider16:0<0,100,1>Saturation (%)

in_pin:L in
in_pin:R in
in_pin:L Sidechain
in_pin:R Sidechain
out_pin:L out
out_pin:R out

@init
output = 1;
transfer_A = 0;
transfer_B = 1;
gain = 1;
env=0;
automakeup = 0;

log2dB = 8.6858896380650365530225783783321;
db2log = 0.11512925464970228420089957273422;
gr_meter=1;
gr_meter_decay = exp(1/(1*srate));

@block
slider8==0?(
attack = exp(-1/(slider3/1000*srate));
release = exp(-1/(slider4/1000*srate));
);
slider8==1?(
Ams=(60000 / tempo * multA);
slider3 = Ams;
sliderchange(slider3);
Rms=(60000 / tempo * multR);
slider4 = Rms;
sliderchange(slider4);
attack = exp(-1/(Ams/1000*srate));
release = exp(-1/(Rms/1000*srate));
);
slider8==2?(
Ams=(60000 / tempo * multA);
slider3 = Ams;
sliderchange(slider3);
attack = exp(-1/(Ams/1000*srate));
release = exp(-1/(slider4/1000*srate));
);
slider8==3?(
Rms=(60000 / tempo * multR);
slider4 = Rms;
sliderchange(slider4);
attack = exp(-1/(slider3/1000*srate));
release = exp(-1/(Rms/1000*srate));
);

@slider
multA = (slider9 & 1) ? 2 ^ -(slider9 >> 1 - 3) / 3 :  2 ^ -(slider9 >> 1 - 2);
multR = (slider10 & 1) ? 2 ^ -(slider10 >> 1 - 3) / 3 :  2 ^ -(slider10 >> 1 - 2);

thresh=slider1;
threshold=10^(thresh/20);

transfer_A = (1/slider2)-1;
transfer_B = output * pow(threshold,-transfer_A);

envelope_decay = exp(-1/(slider5/1000*srate));

automakeup = slider13;
automakeup ? (
autogain = (abs(thresh) - (abs(thresh)/max(1,slider2-1)))/2;
) : (
autogain = 0;
);
vol=slider6;
volv=exp((vol+autogain) * db2log);

ingain=10^(slider15/20);
outgain=10^(-slider15/20);

foo=slider16/200*$pi;
bar=sin(slider16/200*$pi);

@sample
spl0*=ingain;
spl1*=ingain;

slider16 ? (
spl0 = min(max( sin(max(min(spl0,1),-1)*foo)/bar ,-1) ,1);
spl1 = min(max( sin(max(min(spl1,1),-1)*foo)/bar ,-1) ,1);
);

out0=spl0*outgain;
out1=spl1*outgain;

slider14==0 ?(
det = max(abs(out0),abs(out1));
);
slider14==1 ?(
det = max(abs(spl2),abs(spl3));
);
slider14==2 ?(
det = max(abs(os0),abs(os1));
);

det += 0.000000000001;
env = det >= env ? det : det+envelope_decay*(env-det);
transfer_gain = env > threshold ? pow(env,transfer_A)*transfer_B:output;
gain = transfer_gain < gain ? transfer_gain+attack *(gain-transfer_gain) : transfer_gain+release*(gain-transfer_gain);

slider12 == 1 ? (
os0 = out0 * gain;
os1 = out1 * gain;
spl0 = ((out0 * gain)-out0) * volv;
spl1 = ((out1 * gain)-out1) * volv;
):(
spl0 = out0 * gain;
spl1 = out1 * gain;
os0 = spl0;
os1 = spl1;
spl0 *= volv;
spl1 *= volv;
);

gr = log(gain)*log2dB;
grv = exp(gr * db2log);
grv < gr_meter ? gr_meter=grv : ( gr_meter*=gr_meter_decay; gr_meter>1?gr_meter=1; );

@gfx 0 36
gr_meter *= exp(1/30); gr_meter>1?gr_meter=1;
gfx_r=1; gfx_g=gfx_b=0; gfx_a=0.8;

meter_bot=20;
meter_h=min(gfx_h,32);
xscale=gfx_w*20/meter_bot;

gfx_y=0;
gfx_x=gfx_w + log10(gr_meter)*xscale;
gfx_rectto(gfx_w,meter_h);

gfx_r=gfx_g=gfx_b=1.0; gfx_a=0.6;

s2=sqrt(2)/2;
g = s2;
while(
gfx_x=gfx_w + log10(g)*xscale;
gfx_x >= 0 ? 
(
gfx_y=0;
gfx_lineto(gfx_x,meter_h,0);
gfx_y=meter_h-gfx_texth;
gfx_x+=2;
gfx_drawnumber(log10(g)*20,0);
gfx_drawchar($'d');
gfx_drawchar($'B');
);
g*=s2;
gfx_x >=0;
);
